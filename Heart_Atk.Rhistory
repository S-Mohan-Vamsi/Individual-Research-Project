library(readxl)
install.packages("readxl")
library(readxl)
library(readxl)
data <- read_excel("C:/data.xlsx")
View(data)
HeartPd = read_xlsx ("data.xlsx")
HeartPd = read_xlsx ("C:/data.xlsx")
View(data)
library(dplyr, lib.loc = "C:/Program Files/R/R-4.3.1")
install.packages("dplyr")
library(dplyr, lib.loc = "C:/Program Files/R/R-4.3.1")
install.packages("dplyr")
library(dplyr, lib.loc = "C:/Program Files/R/R-4.3.1")
library(dplyr, lib.loc = "C:/Program Files/R")
library(dplyr)
glimpse(data)
str(data)
dim(data)
sum (is.na (data))
sum (duplicate (data))
sum (duplicated (data))
Hrt = unique (data)
sum (duplicated (data))
sum (!duplicated (data))
sum (duplicated (Hrt))
dim (data)
install.packages("psych")
describe(data)
> describe (data)
describe (Hrt)
library(psych)
describe (Hrt)
summary (Hrt)
Hrt $sex = replace (Hrt$ sex, Hrt $sex == 0, "Female")
Hrt $sex = replace (Hrt$ sex, Hrt $sex == 1, "Male")
table (Hrt $sex)
attach (Hrt)
Gender_counts = table(sex)
barplot (Gender_counts, main = "Gender Distribution", xlab = "Gender",)
barplot (Gender_counts, main = "Gender Distribution", xlab = "Gender", ylab ="Counts", legend = rownames (Gender_counts), col = c ("turquoise", "orange"))
colnames (Hrt) [3] = "Chest_Pain_Type"
colnames (Hrt) [4] = "Resting_BP"
colnames (Hrt) [5] = "Cholestrol"
colnames (Hrt) [6] = "Fasting_BP"
colnames (Hrt) [7] = "Resting_ECG"
colnames (Hrt) [8] = "Max_Heart_Rate"
colnames (Hrt) [9] = "Exercise_Induced_Angina"
colnames (Hrt) [10] = "St_Depression"
colnames (Hrt) [11] = "St_Slope"
colnames (Hrt) [12] = "Major_vessels"
colnames (Hrt) [13] = "Thalessimia"
colnames (Hrt)
attach (Hrt)
HrtDF $Exercise_Induced_Angina = replace (HrtDF $Exercise_Induced_Angina, HrtDF $Exercise_Induced_Angina == 1, "Yes")
Hrt $Exercise_Induced_Angina = replace (HrtDF $Exercise_Induced_Angina, Hrt $Exercise_Induced_Angina == 1, "Yes")
Hrt $Exercise_Induced_Angina = replace (Hrt $Exercise_Induced_Angina, Hrt $Exercise_Induced_Angina == 1, "Yes")
Hrt $Exercise_Induced_Angina = replace (Hrt $Exercise_Induced_Angina, Hrt $Exercise_Induced_Angina == 0, "No")
table (Exercise_Induced_Angina)
Angina_counts = table (Exercise_Induced_Angina)
barplot (Angina_counts, main = "Distribution of Exercise Induced Angina", xlab "Categories",
barplot (Angina_counts, main = "Distribution of Exercise Induced Angina", xlab "Categories", ylab ="counts", legend = rownames (Angina_counts), col = c ("seagreen", "red")
barplot (Angina_counts, main = "Distribution of Exercise Induced Angina", xlab "Categories", ylab ="counts", legend = rownames (Angina_counts), col = c ("seagreen", "red"))
barplot(Angina_counts,
main = "Distribution of Exercise Induced Angina",
xlab = "Categories",  # Fixed: Added '=' here
ylab = "Counts",
legend = rownames(Angina_counts),
col = c("seagreen", "red"))
summary (Hrt)
lappy (Hrt, table)
result <- lapply(Hrt, table)
lapply (Hrt, table)
Hrt_Copy = data.frame (Hrt)
traceman (Hrt_Copy) == traceman (Hrt)
tracemem (Hrt_Copy) == tracemem (Hrt)
Hrt_Copy $target = replace (Hrt_Copy $target. Hrt_Copy $target == 0, "NO CVD")
Hrt_Copy $target = replace (Hrt_Copy $target, Hrt_Copy $target == 0, "NO CVD")
Hrt_Copy $target = replace (Hrt_Copy $target, Hrt_Copy $target == 1, "CVD")
attach (Hrt_Copy)
Disease_counts = table (target)
barplot (Disease_counts, main = "Distribution of Disease",
xlab= "Disease",
ylab="Counts", legend
=
rownames (Disease_counts),
col = c("red", "seagreen"))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
table (target, age)
par (mfrow = c (1,1))
barplot (table (target, age), main= "Grouped Bar Chart: CVD Status Distribution across Age", xlab= "Age",
ylab
=
"Counts", legend = rownames (table (target, age)),
col = c("red", "seagreen"), beside
=
TRUE)
par (mfrow = c (1,2))
xfit seq (min (HrtDF_copy_CVD $age), max (HrtDF_copy_CVD $age), length = 20)
par (mfrow = c (1,2))
xfit seq (min (HrtDF_copy_CVD $age), max (HrtDF_copy_CVD $age), length = 20)
par (mfrow = c (1,2))
xfit seq (min (HrtDF_copy_CVD $age), max (HrtDF_copy_CVD $age), length = 20)
par(mfrow = c(1, 2))
# For CVD patients
xfit <- seq(min(HrtDF_copy_CVD$age), max(HrtDF_copy_CVD$age), length = 20)
par(mfrow = c(1, 2))
# For CVD patients
xfit <- seq(min(Hrt_copy_CVD$age), max(Hrt_copy_CVD$age), length = 20)
par(mfrow = c(1, 2))
xfit <- seq(min(Hrt_copy $age), max(Hrt_copy $age), length = 20)
# Assuming HrtDF_copy_CVD is the correct data frame name
par(mfrow = c(1, 2))
# For CVD patients
xfit <- seq(min(Hrt_Copy $age), max(Hrt_Copy $age), length = 20)
yfit <- dnorm(xfit, mean = mean(Hrt_Copy $age), sd = sd(Hrt_Copy $age))
h <- hist(Hrt_Copy $age, breaks = 12, col = "red", xlab = "Age", main = "Age Distribution of CVD patients", ylim = c(0, 40))
yfiti <- yfit * diff(h$mids[1:2]) * length(Hrt_Copy $age)
lines(xfit, yfiti, col = "blue", lwd = 2)
xfit1 <- seq(min(HrtDF_copy_NOCVD$age), max(HrtDF_copy_NOCVD$age), length = 20)
xfit1 <- seq(min(Hrt_Copy $age), max(Hrt_Copy $age), length = 20)
yfit1 <- dnorm(xfit1, mean = mean(Hrt_Copy $age), sd = sd(Hrt_Copy $age))
h1 <- hist(Hrt_Copy $age, breaks = 12, col = "aquamarine", xlab = "Age", main = "Age Distribution of Healthy Persons (Non CVD)", ylim = c(0, 50))
yfit2 <- yfit1 * diff(h1$mids[1:2]) * length(Hrt_Copy $age)
lines(xfit1, yfit2, col = "blue", lwd = 2)
attach (Hrt_Copy)
# Set up a 1x2 grid for plots
par(mfrow = c(1, 2))
# Generate x values for the normal distribution
x_fit <- seq(min(HrtDF_Copy$Resting_BP), max(HrtDF_Copy$Resting_BP), length = 20)
# Setting up a 1x2 grid for plots
par(mfrow = c(1, 2))
# Generate x values for the normal distribution
x_fit <- seq(min(Hrt_Copy$Resting_BP), max(Hrt_Copy$Resting_BP), length = 20)
# Generate y values for the normal distribution
y_fit <- dnorm(x_fit, mean = mean(Hrt_Copy$Resting_BP), sd = sd(Hrt_Copy$Resting_BP))
# Generate histogram for resting blood pressure
h <- hist(Hrt_Copy$Resting_BP, breaks = 12, col = "gold", xlab = "Resting Blood Pressure", main = "Resting Blood Pressure Vs Heart Disease", ylim = c(0, 80))
# Calculate adjusted y values for normal distribution
y_fit1 <- y_fit * diff(h$mids[1:2]) * length(Hrt_Copy$Resting_BP)
# Overlay normal distribution on histogram
lines(x_fit, y_fit1, col = "blue", lwd = 2)
# Create a boxplot for resting blood pressure vs heart disease
boxplot(Resting_BP ~ target, data = Hrt_Copy, notch = FALSE,
col = c("red", "seagreen"), main = "Boxplot for Resting Blood Pressure Vs Heart Disease", xlab = "Heart Disease category")
devtools::install_github("kassambara/easyGgplot2")
install.packages("devtools")
devtools::install_github("kassambara/easyGgplot2")
library(easyGgplot2)
library(ggplot2)
# Set up a single plot
par(mfrow = c(1, 1))
# Create the histogram using ggplot2
ggplot(HrtDF_Copy, aes(x = Resting_BP, fill = target)) +
geom_histogram(alpha = 0.5, position = "identity", bins = 30) +
labs(title = "Resting Blood Pressure vs. Heart Disease",
x = "Resting Blood Pressure",
y = "Frequency") +
scale_fill_manual(values = c("red", "seagreen")) +
theme_minimal()
library(ggplot2)
# Set up a single plot
par(mfrow = c(1, 1))
# Create the histogram using ggplot2
ggplot(Hrt_Copy, aes(x = Resting_BP, fill = target)) +
geom_histogram(alpha = 0.5, position = "identity", bins = 30) +
labs(title = "Resting Blood Pressure vs. Heart Disease",
x = "Resting Blood Pressure",
y = "Frequency") +
scale_fill_manual(values = c("red", "seagreen")) +
theme_minimal()
library(gridExtra)
install.packages(gridExtra)
install.packages("gridExtra")
attach(Hrt_Copy)
# Load necessary packages
library(ggplot2)
library(gridExtra)
# Create the first plot (Histogram with Density)
ggplt1 <- ggplot(Hrt_Copy, aes(x = Resting_BP, fill = target)) +
geom_histogram(aes(y = ..density..), colour = "black", binwidth = 10) +
geom_density(alpha = 0.5, fill = "yellow") +
ggtitle("Frequency Histogram on Resting BP Vs Heart Disease Category") +
scale_x_continuous(name = "Resting Blood Pressure",
breaks = seq(60, 220, 20),
limits = c(60, 220))
# Create the second plot (Boxplot)
ggplt2 <- ggplot(Hrt_Copy, aes(x = target, y = Resting_BP, fill = target)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.2) +
scale_y_continuous(name = "Resting Blood Pressure",
breaks = seq(0, 200, 20),
limits = c(0, 200)) +
scale_x_discrete(name = "Disease Categories") +
labs(title = "Box Plot", subtitle = "Resting BP Vs Disease Category") +
theme_classic()
# Arrange the plots side by side
grid.arrange(ggplt1, ggplt2, ncol = 2)
ggplt3 <- ggplot(Hrt_Copy, aes(x = cholesterol, fill = target)) +
geom_histogram(aes(y = ..density..), colour = "black") +
geom_density(alpha = 0.5, fill = "gold") +
ggtitle("Frequency Histogram on Cholesterol vs Heart Disease category") +
scale_x_continuous(name = "Cholesterol",
breaks = seq(0, 600, 50),
limits = c(0, 600))
ggplt4 <- ggplot(Hrt_Copy, aes(x = target, y = cholesterol, fill = target)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.2) +
theme_classic() +
scale_y_continuous(name = "Cholesterol",
breaks = seq(0, 600, 50),
limits = c(0, 600)) +
scale_x_discrete(name = "Disease Categories") +
labs(title = "Box Plot") +
labs(subtitle = "Cholesterol Vs Disease Category")
grid.arrange(ggplt3, ggplt4, ncol = 2)
ggplt3 <- ggplot(Hrt_Copy, aes(x = cholestrol, fill = target)) +
geom_histogram(aes(y = ..density..), colour = "black") +
geom_density(alpha = 0.5, fill = "gold") +
ggtitle("Frequency Histogram on Cholestrol vs Heart Disease category") +
scale_x_continuous(name = "Cholestrol",
breaks = seq(0, 600, 50),
limits = c(0, 600))
ggplt4 <- ggplot(Hrt_Copy, aes(x = target, y = cholesterol, fill = target)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.2) +
theme_classic() +
scale_y_continuous(name = "Cholesterol",
breaks = seq(0, 600, 50),
limits = c(0, 600)) +
scale_x_discrete(name = "Disease Categories") +
labs(title = "Box Plot") +
labs(subtitle = "Cholestrol Vs Disease Category")
grid.arrange(ggplt3, ggplt4, ncol = 2)
library(ggplot2)
library(gridExtra)
## Relationship between cholestrol level & target variable ##
ggplt3 <- ggplot(Hrt_Copy, aes(x = cholestrol, fill = target)) +
geom_histogram(aes(y = ..density..), colour = "black") +
geom_density(alpha = 0.5, fill = "gold") +
ggtitle("Frequency Histogram on Cholesterol vs Heart Disease category") +
scale_x_continuous(name = "Cholesterol",
breaks = seq(0, 600, 50),
limits = c(0, 600))
ggplt4 <- ggplot(Hrt_Copy, aes(x = target, y = cholestrol, fill = target)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.2) +
theme_classic() +
scale_y_continuous(name = "Cholestrol",
breaks = seq(0, 600, 50),
limits = c(0, 600)) +
scale_x_discrete(name = "Disease Categories") +
labs(title = "Box Plot") +
labs(subtitle = "Cholesterol Vs Disease Category")
grid.arrange(ggplt3, ggplt4, ncol = 2)
fit_1 = lm (target ~ St_Slope, data = Hrt)
summary (fit_1)
library(interactions)
install.packages("interactions")
library(interactions)
cat_plot (fit_1, pred = St_Slope, modx = NULL, interval = TRUE)
fit_2 = lm (target ~ Thalessimia, data =Hrt)
summary (fit_2)
cat_plot (fit_2, pred = Thalessimia, modx = NULL, interval = TRUE)
fit_3 = lm (target ~ Fasting_BP * sex, data Hrt)
fit_3 = lm (target ~ Fasting_BP * sex, data = Hrt)
summary (fit_3)
cat_plot (fit_3, pred = Fasting_BP, modx = sex, interval = TRUE)
library(GGally)
install.packages("GGally")
library(GGally)
ggpairs (data = Hrt, columns = 1:14, title ="Correlation of variables in the data")
Sample_Sz
Smaple_Sz = floor (0.75 * nrow (Hrt))
Smaple_Sz
set.seed (123)
train_ind = sample (seq_len (nrow (Hrt)), size = Smaple_Sz)
train_data = Hrt [train_ind,]
test_data = Hrt [train_ind,]
dim (train_data)
dim (test_data)
attach (train_data)
logit.model = glm (target ~ ., data = train_data, family = binomial)
summary (logit.model)
logit.model1 = glm (target ~ .- Resting_ECG, data = train_data, family = binomial)
summary (logit.model1)
